p 1 $
    every 4 (
        spreadr ($) [
            density 2, (|+ speed "-1"), striate "[3 4 5 6]",
            (# speed "0.8"), id, (|+| note "-7"), id,
            (|+| n 5), (off 0.125 (|+ note "3")), hurry 4,
            linger 0.25,
            (striateBy 4 "1%8")
        ]
    ) $
    s "feelfx"
    |+| n (segment  "[2!2 1]/2" $ irand 8)
    # tremolorate (slow 4 (range 1 8 sine) ) # tremolodepth "1"
    # pan (slow 5 $ "0.125 0.75 0.5 0.25 0.675 0")
    # note "< 0 5 0 -3 0 -5 >/8"
    # gain 0.75

do
-- stopbassist
let beis =
        degradeBy 0.015 $
        s "jvbass"
        -- # cutoff (slow 8 $ rangex 80 800 $ tri)
        +| n (scale "ritusen" "{c5 d5 e5 <e4 f5>, e4 f4 g4}%4")
        # gain 1
let acento =
        -- someCyclesBy 0.5 (
        --     spreadr ($) [
        --         density 2, rev, slow 2, striate 3, (# speed ( choose [0.75,0.5,1,1.5]) )
        --     ]
        -- ) $
        -- brak $
        slow 3 $
        s "jvbass"
        +| n (scale "ritusen" "< g4 c4 ~!3 f3 ~!3 c4 ~!3 e4 >*2" )
        -- # cutoff (slow 8 $ rangex 200 2000 $ tri)
        -- # resonance 0.5
        # gain 0.6
        -- # sind 1
p 2 $
    every 32 (|+| n 3) $
    every 24 (|-| n 2) $
    every 8 (|+| n 5) $
    stack [ 
        beis
        # orbit 1
        ,
        acento
        -- # orbit 3
    ]
    # gain 0.8
    -- # pan "[0, 0.25, 0.5, 0.75]"
    
do
let kick =
        s "[[bd, kip-g](5,8)]"
        |+| n (irand 3)
let caixa =
        ghost $
        slow "<8 16!2>" $
        sound "[<rimu rims>*2](3,16)"
        # n (irand 2) 
p 3 $ stack [
    kick # gain 0.8 # orbit 1  -- # pitch 0.5
    ,
    caixa # gain 0.85 # orbit 2
    ]

p 3 $  silence

do
let fill =
        fix ( # up 32 ) (s "stk") $
        stack [
            s "[<[~ snc stk!2] [~ snc stk]>/<2 1 3>/< 0.5 1 2 3 4 >, ~ sne ]*2"
            # n (irand 3) 
            ,
            slow 2 $
            s "stk(14, 16)"
            |+| n (irand 4)
            # gain 0.95
            # orbit 2
        ]
let amen =
        degradeBy 0.05 $ 
        every 4 (spreadr ($) [
            hurry 2, rev, slow 2, striate 3,
            (|+ speed ( choose [0.75,0.5,1,1.5,-1]) )
        ]) $
        slow 2 $
        -- sometimesBy 0.05 (# speed "-1") $
        slow "[1!7 2]" $
        s "amencutup" +| n ( slow 1 $ (run 16) + "<0 4 8 12 16 24>/4")
        -- # gain 0.99
        -- struct ("t(<7!8 9!8 5!8>,<16!16 12!8>,<14!8 0!16 >)") $
        -- s ( slow "[1!3 1]" $ "amencutup*16" )
        -- # n ( iter 8 $ (run 16) )
        # room 0.125
p 4 $
    stack [
        fill,
        amen # orbit 1 # gain 0.8
    ]
    -- # pan rand

-- PARTE 2

do
let jazz =
            someCyclesBy 0.12 ( spreadr ($) [fast 2, rev, slow 2, striate 6, (# speed "0.8"), (hurry 2) ] ) $
            sometimesBy 0.097 (# speed "-1") $
            someCyclesBy 0.08 ( superimpose (hurry 2)) $
            chop 8 $
            slow 8 $
            -- sometimesBy 0.2 (# note (-3)) $
            ("<0!8 0.125!8 0.25!8 0.5!8 0.625!8 0.75!8>" ~>) $ 
        striateBy "<2 3 4 1>" (1/4) $
        s "[soulburst1a]" 
        -- # tape 0
p 5 $
     cat[
        striateBy "<1 2 4>" (1/4) $
        jazz
        # legato (slow 24 $ range 0.125 1 saw )
        # orbit 1
        # gain 1
        , slow "<8 6 4 2 0>" $ "dummy"
    ]

do
-- stopacidmod
-- acidcomp
-- p 2 silence
p 6 $
    sometimesBy 0.5 (
        (fast 0.5)
        .(# legato 1.3)
        .( |+ gain "[1 1.2]" ).( + n 12 )
    ) $
    "acid*4"
    |+| n (scale "ritusen" ("[ -16 -10 -15 -20 -12 -15 -17 -20]" + "{7 12}%16" ) + 7)
    |+ gain (discretise 16 $ slow 1.7 $ choose [0.98, 1.1] - 0.25)
    |+ legato (discretise 16 $ slow 1.1 $ choose [0.25, 1, 1.1] )
    # orbit 3
-- acidmod

all (
    (# gain 0.80).    
    (fix (|-| n 12 ) ("abl")).
    ( # n (scale "hexPhrygian"
        -- "0"
       "{0 5 2 <-3 3>, 6 7 8}%4"
    ) )
    )

all (id)

movol 0.5
