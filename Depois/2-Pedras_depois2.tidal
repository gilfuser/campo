-- SILÃŠNCIO. Criancas sentam
hush

do
hush
resetCycles
p 1 $ "feelfx"
    |+| n "[0!3 2]/4"
    # tremolorate (slow 4 $ "2 8 4 3 1.5")
    # tremolodepth 1
    # pan (slow 5 $ "0 0.75 0.5 0.25 0.125 0.625")
    # orbit 0
    # gain 1

do
-- resetCycles
-- hush
p 1 silence
let pedras =
        -- sometimesBy 0.2 (|+| n "[0, 7]") $
        sometimesBy 0.1 ( fast 2) $
        whenmod 16 12 (#( delay 0.25 # det 0.75 # n "<0 -7 3>/16")) $
        whenmod 32 24 (superimpose (iter 4)) $
        fix (# gain 1.2) (s "saw") $
        slow "<4 8>/32" $
        juxBy 0.75 rev $
        chunk 4 (fast 2 . (|- n 7)) $
        -- off (slow 4 $ run "{ 1/4 1/8 1/16 }%6") (|+ (discretise (1/8) $ choose[4,7,9,10])) $
        someCyclesBy 0.105 (
        -- ghost .
        (|* legato 0.25)) $
        struct (iter "<4!2 8 4>" "t(5,8)") $
        s "<[supervibe saw]!7 [supervibe, ~ saw]*2>" 
        # n (scale "<majPent minPent>/32" (discretise "<4 8>" $ ( slow 1.2 $ choose[0,1,4,5,7,9,10] )))
        # legato (smooth $ range 0.25 1 rand) 
        # velocity (range 0.01 0.25 rand)
let minijazz =
        stack [
            sometimesBy 0.025 (fast 2) $
            s "[peo-df pec-df]*2"
            # n (irand 3) - 1
            |+| nudge "[0.04 0]*2"
            -- # cut 1
            # gain 0.7
            # orbit 3
            ,
            s "kip-g" # n (irand 3)
            # gain 0.8
        ]
p 2 $
    stack [
        pedras
        # gain 0.9
        ,
        minijazz
    ]
    # orbit 2

do
let beis =
        -- someCyclesBy 0.2 (
            -- spreadr ($) [
                -- density 2, rev, slow 2, degradeBy 0.25, striate 6, (# speed ( choose [0.75,0.5,-1,1.5]) )
            -- ]
        -- ) $
        -- s "jvbass"
        s "jvbass(6,16,<0 2 1 3>/32)"
        -- # cutoff (slow 8 $ rangex 80 800 $ tri)
        +| n (scale "<majPent minPent>/32" "{0 5 2 <-3 3>, 6 7 8}%4" )
        -- +| n (scale "<majPent minPent>/32" "{0 5 2 <-3 3>, 6 7 8}%16" )
let acento =
        someCyclesBy 0.5 (
            spreadr ($) [
                density 2, rev, slow 2, striate 3, (# speed ( choose [0.75,0.5,1,1.5]) )
            ]
        ) $
        struct ( palindrome "t(5,8)")
        "[ jvbass ]"
        +| n (scale "<majPent minPent>/24" ( (arp "< pinkydown pinkyup updown>/4" "{0 5 2 <-3 3>, 6 7 8}%4" ) ) ) 
        # cutoff ( (4 ~>) $ slow 8 $ rangex 200 2000 $ tri)
        -- # resonance 0.75
        -- # sind 0.5
        # orbit 1
p 3 $
    degradeBy 0.0 $
    every 32 (|+| n 2) $
    every 16 (|+| n 1) $
    every 8 (|+| n 5) $
    stack [ 
        slow 1 $ -- <<<<<<<<<<<<<<<<<<<<<<<<- AQUI!!!!
        beis
        # orbit 1
        # gain 0.5
        ,
        slow 1 $
        acento
        -- |- n 12
        # gain 0.5
    ]
    -- # orbit 3
    # pan "[0, 0.25, 0.5, 0.75]" 

do
let kick1 =
        -- degradeBy 0.1 $
        s "[kif-d(3,8)]"
        # n (irand 3)
        -- # pan "[0, 0.5]"
        # orbit 3
let stick1 =
        slow "[1 2]" $
        s "[<[~ ~ stk!2] [~ ~ stk]>/<2 1 3>/< 0.5 1 2 3 > ]*2"
let stick2 =
        slow 3 $
        s "stk(14, 16)"
        |+| note (segment 4 $ range "-4" 8 $ irand 8)
jumpMod 4 4 $
    fix ((# gain 0.8) . (degradeBy 0.125) ) (s "stk") $
    fix ( # up 32 ) (s "stk") $
    stack [
        stick1 # orbit 2
        -- , kick1 # gain 0.85 # orbit 1
        , stick2 # orbit 2
    ]
    -- # pan "[0, 0.25, 0.5, 0.75]"

do
let tamborim =
        s "tamborim(< 1 2 3 4 5 6 >,16,14)"
        # n (smooth $ irand 4)
        # gain 0.8
let prato =
        slow 16 $
        s "ric-g*9" # n (run 9)
p 5 $
    sometimesBy 0.1 (within (6/8, 1) (fast 6) ) $
    degradeBy 0.15 $
    slow 1 $
    stack [
        tamborim,
        prato
    ] # orbit 2
    # pan ( rand * 0.5 - 0.25) 

stopbassist

all (slow 1 . struct (every 3 inv "t(5,8)"))

all(id)
